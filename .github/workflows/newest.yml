# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# This workflow assumes you have already created the target AKS cluster and have created an Azure Container Registry (ACR)
# For instructions see:
#   - https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal
#   - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-portal
#   - https://github.com/Azure/aks-create-action
#
# To configure this workflow:
#
# 1. Set the following secrets in your repository (instructions for getting these can be found at https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux):
#    - AZURE_CLIENT_ID
#    - AZURE_TENANT_ID
#    - AZURE_SUBSCRIPTION_ID
#
# 2. Set the following environment variables (or replace the values below):
#    - AZURE_CONTAINER_REGISTRY (name of your container registry / ACR)
#    - RESOURCE_GROUP (where your cluster is deployed)
#    - CLUSTER_NAME (name of your AKS cluster)
#    - CONTAINER_NAME (name of the container image you would like to push up to your ACR)
#    - IMAGE_PULL_SECRET_NAME (name of the ImagePullSecret that will be created to pull your ACR image)
#    - DEPLOYMENT_MANIFEST_PATH (path to the manifest yaml for your deployment)
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
# For more options with the actions used below please refer to https://github.com/Azure/login

name: Newest Build and deploy an app to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "alexrampuptest"
  CONTAINER_NAME: "alexapp20220601"
  RESOURCE_GROUP: "AlexRampUpTest"
  CLUSTER_NAME: "AlexRampUpTest"
  IMAGE_PULL_SECRET_NAME: "imagepullsecretname"
  DEPLOYMENT_MANIFEST_PATH: ./
  NAMESPACE: "default"
  CLUSTER_RESOURCE_GROUP: "AlexRampUpTest"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    # Checks out the repository this file is in
    - uses: actions/checkout@v3
    
    # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        
     # Connect to Azure Container Registry (ACR)
    - name: Build and push image to ACR
      run: |
        az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .



  createSecret:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    
   # Set the target Azure Kubernetes Service (AKS) cluster.   
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -
    
    # Create image pull secret for ACR_test
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.IMAGE_PULL_SECRET_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
        arguments: --force true

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage, createSecret]
    steps:
    # Checks out the repository this file is in
    - uses: actions/checkout@v3
    
    # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
      
    # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
    - name: Get K8s context
      uses: azure/aks-set-context@v2.0
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}

    # Deploys application based on given manifest file
    - name: Deploys application
      uses: Azure/k8s-deploy@v3.1
      with:
        action: deploy
        manifests: |
          ./manifestsDirectory/deployment.yaml
          ./manifestsDirectory/service.yaml
        images: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.IMAGE_PULL_SECRET_NAME }}
        namespace: ${{ env.NAMESPACE }}
